Application
 - Input
 - Processing
 - Output

* State vs Logic
  - Databases
    - RDBMS/SQL - Relational DataBase Management Systems/Structured Query Language
    - 
  -

Artist
|  ID | Short name | Full name    | Language     |
|-----+------------+--------------+--------------|
| 001 | X          | Xavier       | English      |
| 002 | X          | Xerox        | English      |
| 003 | xav        | Xavier       | English      |
| 005 | Satch      | Joe Satriani | Instrumental |
|     |            |              |              |
  - ID (Primary Key) - Uniquely identifies a row in the table
    - NOT NULL
    - Unique

Song
|  ID | Artist | Name        | Year | Lyrics |
|-----+--------+-------------+------+--------|
| 001 |    003 | Winter song | 2019 | ...    |
| 002 |    005 | Summer Song | 1998 |        |
  - ID (Primary Key)
  - Artist (Foreign Key)
    - Not null
    - Should contain something that is also in the Artist.ID field (constraint)


* Relational databases
  - Oracle [Closed Source][Client Server]
  - PostgreSQL [Open Source][Client Server]
  - MySQL [Open Source][Client Server]
  - Sqlite [Open Source][File based]

* SEtting up postgreSQL
  - sudo apt-get install postgresql-14
  - sudo /etc/init.d/postgresql start
  - Create a user
    - sudo su - # whoami should show "root"
    - sudo postgres # whoami should show "postgres"
    - createdb --interactive noufal
    - Ctrl-D Ctrl-D # whoami should show "noufal"
    - createdb lyrics # Create a lyrics database
    - psql lyrics # Connect to lyrics database



| system   | postgres |
|----------+----------|
| noufal   | noufal   |
| postgres | postgres |
| ..       |          |
| ..       |          |
| ..       |          |
